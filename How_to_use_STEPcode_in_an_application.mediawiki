[[Category:Code discussion]]

== CMake Integration ==
* Use '''SC_IS_SUBBUILD''' and '''SC_BUILD_SCHEMAS'''
* '''SC_SDAI_ADDITIONAL_EXES_SRCS''' can be used to have SC build single-file executables (similar to p21read)
** this will not work for applications with more than one source code file or that need to link other libs.
==== See also: [[STEPcode CMake variables]] ====
== C++ examples ==
* [[Minimal Part 21 C++ example]]
* doxygen documentation of [http://stepcode.org/stepcode-use-doxygen/ apps using STEPcode]
* [http://github.com/stepcode/stepcode/tree/master/test/cpp/ sc/test/cpp/] - tests written in c++; these can be built when ENABLE_TESTING is set to ON, but are excluded from 'make all'
* [http://github.com/stepcode/stepcode/tree/master/src/test sc/src/test] - tests written by NIST; all are up-to-date, but [https://github.com/stepcode/stepcode/blob/master/src/test/p21read/p21read.cc#L138 p21read] is the most frequently used. See the README in sc/src/test for more.
* [http://github.com/stepcode/stepcode/tree/master/src/clprobe-ui sc/src/clprobe-ui] - remnants of a UI known as dataProbe; requires the [http://www.ivtools.org/ivtools/interviews.html InterViews] toolkit, which predates X windows. An attempt has been made to resurrect it, but without success.

== C++ applications that are not in the GitHub repository ==
The BRL-CAD [http://brlcad.svn.sourceforge.net/viewvc/brlcad/brlcad/trunk/src/conv/step/ step-g] converter, documented [http://stepcode.org/stepcode-use-doxygen/step-g_8cpp.html here] (Note - currently, the BRL-CAD version of STEPcode differs slightly from the version on GitHub)

Laurent Bauer's [https://github.com/LaurentBauer/SCView/wiki SCView]

== Python ==
* [http://github.com/stepcode/stepcode/wiki/python-generator Python Generator]

== TODO ==
* describe use of [http://github.com/stepcode/stepcode/blob/master/src/cllazyfile/lazyInstMgr.h lazy loading code]
* create a page with a small Part 21 file, with description of format and links to relevant classes - SDAI_Application_instance, STEPcomplex, generated code (?)
* run doxygen on parts of STEPcode (libexpress + exppp + fedex_plus, fedex_python, cllazyfile, cleditor, clstepcore + cldai + clutils + base ) '''and automate doxygen with a script'''

== See also ==
* [[Building STEPcode]]
* [[How to test with CTest]]